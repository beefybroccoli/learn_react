Steps to pass Global_Data from Provider to Consumer
1. Create a Context object
    i.e. const Context_Object = React.createContext();

2. Wrap the consumer within the Context object and Provider
    i.e.
        //in App.js
        <Context_Object.Provider value={GlobalData}>
            <div>
                <h2>Context API</h2>
            </div>
        </Context_Object.Provider>

3. Export consumer object
    i.e. 
    //in App.js
    export const Context_Consumer = GlobalData.Consumer;

4. Consumers Consumers

    i.e.
    //in news.js, (consumer js file)
    import {Context_Consumer} from "../App.js"
    <Context_Consumer>
    {
        ({firstName}) => ( 
            <div>
                <p> ${firstName}</p>
            </div>

        )//end function
    }//end bracelet
    <Context_Consumer>

situation 1a (rerender both all Consumers when the Provider rerender)
    //when the Provider re-render, the Consumer(s) will rerender as well
    <Context_Provider.Provider value={{name:"tom"}}>

situation 1b (rerender only the Provider)
    //when the Provider re-render, the consumers WON'T rerender;thus, only the Provider rerender
    <Context_Provider.Provider value={object}>

situation 2 - consume multiple contexts

    //in App.js--------------------------------------------
    const Context_GlobalData = React.createContext()
    export const Consumer_Context_GlobalData = GlobalData.Consumer;
    const Context_GlobalTheme = React.crateContext();
    export const Consumer_Context_GlobalTheme = GlobalTheme.Consumer;

    //Component_2 consumes two contexts
    //Conponent_1 consumers only one contexts
    return (
        <Context_GlobalData.Provider value ={...}>

            <Component_1> ... </Component_1>

            <Context_GlobalTheme.Provider value={...}>
                <Component_2> ... </Component_2>
            </Context_GlobalTheme.Provider>

        </Context_GlobalData.Provider>
    );


    //in Component_2.js-----------------------------------
    import {Consumer_Context_GlobalData} from "../App.js"
    import {Consumer_Context_GlobalTheme} from "../App.js"
    
    return(
        <div>
            <Consumer_Context_GlobalTheme>
                {
                    (some_data)=>(
                        <p> ${some_data} </p>
                    )//end function
                }//end bracket
            </Consumer_Context_GlobalTheme>
        
            <Consumer_Context_GlobalData>
            {
                ({some_data}) => ( 
                    <div>
                        <p> ${some_data}</p>
                    </div>

                )//end function
            }//end bracelet
            </Consumer_Context_GlobalData>
    );


    